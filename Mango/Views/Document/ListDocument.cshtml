@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;
@model IEnumerable<BaseCourse.Dto.DocumentDto>

@{
    ViewData["Title"] = "ListDocument";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>ListDocument</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="row col-12">
@foreach (var item in Model)
{
    <div class="card col-3 m-5" >
            <img src="https://www.macworld.com/wp-content/uploads/2023/12/pdf-icon-2.jpg?quality=50&strip=all" class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title">@item.Name</h5>
                <p class="card-text">by @User.Claims.Where(x => x.Type == "name").FirstOrDefault()?.Value</p>
            <a href="@item.Url" class="btn btn-primary">View</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
        </div>
    </div>
}
</div>
<div class="row">
    @Html.PagedListPager((IPagedList) Model, page => Url.Action("ListDocument", "Document", new { page = page }), new PagedListRenderOptions(){ LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }})
</div>